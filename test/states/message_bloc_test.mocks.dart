// Mocks generated by Mockito 5.4.4 from annotations
// in first_chat_app/test/states/message_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:chat/src/models/message.dart' as _i4;
import 'package:chat/src/models/user.dart' as _i5;
import 'package:chat/src/services/message/message_service_contract.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [IMessageService].
///
/// See the documentation for Mockito's code generation for more information.
class FakeMessageService extends _i1.Mock implements _i2.IMessageService {
  @override
  _i3.Future<bool> send(_i4.Message? message) => (super.noSuchMethod(
        Invocation.method(
          #send,
          [message],
        ),
        returnValue: _i3.Future<bool>.value(false),
        returnValueForMissingStub: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Stream<_i4.Message> messages({required _i5.User? activeUser}) =>
      (super.noSuchMethod(
        Invocation.method(
          #messages,
          [],
          {#activeUser: activeUser},
        ),
        returnValue: _i3.Stream<_i4.Message>.empty(),
        returnValueForMissingStub: _i3.Stream<_i4.Message>.empty(),
      ) as _i3.Stream<_i4.Message>);
}
